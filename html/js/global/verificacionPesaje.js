/**
 * Funci√≥n espec√≠fica para automatizar verificaci√≥n en pesaje
 * Solo se ejecuta en el m√≥dulo 2 (pesaje) y solo en el √°rea de despeje
 */

// Funci√≥n para marcar autom√°ticamente el bot√≥n de verificado como aprobado
function marcarVerificadoDespejeComoAprobado() {
    console.log('üîç marcarVerificadoDespejeComoAprobado - Funci√≥n iniciada');
    console.log('üîç marcarVerificadoDespejeComoAprobado - M√≥dulo actual:', modulo);
    console.log('üîç marcarVerificadoDespejeComoAprobado - Tipo de m√≥dulo:', typeof modulo);
    
    // Solo ejecutar si estamos en el m√≥dulo de pesaje (m√≥dulo 2)
    if (modulo == 2) {
        console.log('‚úÖ marcarVerificadoDespejeComoAprobado - M√≥dulo pesaje detectado correctamente');
        
        // Buscar el bot√≥n de verificado del despeje
        const btnVerificado = $('.despeje_verificado');
        console.log('üîç marcarVerificadoDespejeComoAprobado - Bot√≥n verificado encontrado:', btnVerificado.length > 0);
        console.log('üîç marcarVerificadoDespejeComoAprobado - HTML del bot√≥n:', btnVerificado.html());
        
        if (btnVerificado.length > 0) {
            // Marcar como aprobado visualmente
            btnVerificado
                .prop('disabled', true)
                .css({ 
                    background: "lightgray", 
                    border: "gray" 
                });
            console.log('‚úÖ marcarVerificadoDespejeComoAprobado - Bot√≥n verificado marcado como aprobado');
            console.log('üîç marcarVerificadoDespejeComoAprobado - Estado despu√©s del cambio:', btnVerificado.prop('disabled'));
            
            // Guardar en la base de datos
            guardarVerificacionEnBD();
        } else {
            console.log('‚ùå marcarVerificadoDespejeComoAprobado - No se encontr√≥ el bot√≥n .despeje_verificado');
        }
    } else {
        console.log('‚ùå marcarVerificadoDespejeComoAprobado - No es m√≥dulo de pesaje, m√≥dulo actual:', modulo);
    }
}

// Funci√≥n para guardar la verificaci√≥n en la base de datos
function guardarVerificacionEnBD() {
    console.log('üîç guardarVerificacionEnBD - Iniciando guardado en BD');
    console.log('üîç guardarVerificacionEnBD - ID Batch:', idBatch);
    console.log('üîç guardarVerificacionEnBD - M√≥dulo:', modulo);
    
    // Crear datos para enviar
    let data = new FormData();
    data.append('operacion', '5'); // Operaci√≥n para actualizar verifico
    data.append('modulo', modulo);
    data.append('batch', idBatch);
    data.append('verifico', '41'); // Usuario autom√°tico
    
    console.log('üîç guardarVerificacionEnBD - Enviando datos:', {
        operacion: '5',
        modulo: modulo,
        batch: idBatch,
        verifico: '41'
    });
    
    // Llamar al endpoint para actualizar la base de datos usando jQuery AJAX
    $.ajax({
        type: 'POST',
        url: '../../html/php/despeje.php',
        data: data,
        processData: false,
        contentType: false,
        success: function(result) {
            console.log('‚úÖ guardarVerificacionEnBD - Respuesta exitosa:', result);
            if (result == '1') {
                console.log('‚úÖ guardarVerificacionEnBD - Verificaci√≥n guardada correctamente en BD');
            } else {
                console.log('‚ùå guardarVerificacionEnBD - Error al guardar en BD, respuesta:', result);
            }
        },
        error: function(xhr, status, error) {
            console.error('‚ùå guardarVerificacionEnBD - Error en la petici√≥n:', error);
        }
    });
} 